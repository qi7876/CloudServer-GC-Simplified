find_package(Boost 1.36.0 REQUIRED COMPONENTS thread system serialization)
find_package(LevelDB REQUIRED)
find_package(OpenSSL REQUIRED)

if(Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})
    link_directories(${Boost_LIBRARY_DIRS})
else()
    message(FATAL_ERROR "Cannot find boost library")
endif()

if(LevelDB_FOUND)
    include_directories(${LevelDB_INCLUDES})
    link_directories(${LevelDB_LIBRARIES})
else()
    message(FATAL_ERROR "Cannot find Leveldb library")
endif()
message(STATUS "Find LevelDB version: ${LEVELDB_VERSION}")

if(OPENSSL_FOUND)
    # include_directories(${OPENSSL_INCLUDE_DIR})
    # link_directories(${OPENSSL_LIBRARIES})
else()
    message(FATAL_ERROR "Cannot find OpenSSL library")
endif()

message(STATUS "Find OpenSSL version: ${OPENSSL_VERSION}")
if(OPENSSL_VERSION VERSION_LESS "1.1")
    message(FATAL_ERROR "OpenSSL version is less than 1.1")
endif()

set(BOOST_LIBRARY_OBJ boost_thread boost_system boost_serialization)
if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
    set(SYSTEM_LIBRARY_OBJ pthread lz4 jemalloc)
else()
    set(SYSTEM_LIBRARY_OBJ pthread lz4)
endif()
set(OPENSSL_LIBRARY_OBJ ssl crypto)
set(THIRD_OBJ ${OPENSSL_LIBRARY_OBJ} leveldb ${BOOST_LIBRARY_OBJ} ${SYSTEM_LIBRARY_OBJ})
set(INSIDE_OBJ UtilCore DatabaseCore IndexCore CommCore ServerCore)
set(FINAL_OBJ ${THIRD_OBJ} ${INSIDE_OBJ})

add_subdirectory(App)
add_subdirectory(Util)
add_subdirectory(Database)
add_subdirectory(Server)
add_subdirectory(Index)
add_subdirectory(Comm)